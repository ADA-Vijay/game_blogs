import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import Header from "../components/header";
import Footer from "../components/footer";
import Container from "react-bootstrap/Container";
import styles from "@/styles/Home.module.css";
import axios from "axios";
const inter = Inter({ subsets: ["latin"] });

const heroData = [
  {
    imageUrl:
      "https://live.staticflickr.com/65535/53457230978_912df9e01e_o.jpg",
    bags: "palworld",
    name: "Palworld Guide: How to Fain Your Base",
  },
  {
    imageUrl:
      "https://live.staticflickr.com/65535/53457231183_ae61664133_o.jpg",
    bags: "GENSHIN IMPACT",
    name: "Genshin Impact 4.4: All Things You Need to Know",
  },
  {
    imageUrl:
      "https://live.staticflickr.com/65535/53476768569_9287b8293d_b.jpg",
    bags: "DESTINY",
    name: "Destiny 2 Players Are Shocked with the New Character",
  },
  {
    imageUrl:
      "https://live.staticflickr.com/65535/53457421164_f7d7c06e2a_o.jpg",
    bags: "CYBERPUNK",
    name: "Keanu Reeves Cameo in the Newest Cyberpunk Update",
  },
];

const promoData = [
  {
    imageUrl:
      "https://wallpapercosmos.com/w/full/7/9/b/1232424-3840x2160-desktop-4k-gothic-anime-wallpaper-image.jpg",
    name: "Palworld",
  },
  {
    imageUrl:
      "https://templatefor.net/wp-content/uploads/2018/03/wp-anime-65248541.jpg",
    name: "GENSHIN IMPACT",
  },
  {
    imageUrl:
      "https://i0.wp.com/www.spielanime.com/wp-content/uploads/2023/07/jujutsu-kaisen-season-1-recap-before-season-2.jpg",
    name: "jujutsu kaisen",
  },
];

const latestData = [
  {
    imageUrl:
      "https://qph.cf2.quoracdn.net/main-qimg-10f11f6672991badc073cb461b0ccc4c-lq",
    bags: "palworld",
    name: "Palworld Guide: How to Fain Your Base How to Fain Your Base How to Fain Your Base",
    activeDate: "arzan khan 2 months ago",
  },
  {
    imageUrl:
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTjmOwTCWWlOhrCKwGhG__tZp9Zn6FHW9pDxA&usqp=CAU",
    bags: "GENSHIN IMPACT",
    name: "Genshin Impact 4.4: All Things You Need to Know All Things You Need to KnowAll Things You Need to KnowAll Things You Need to KnowAll Things You Need to Know",
    activeDate: "arzan khan 2 months ago",
  },
  {
    imageUrl:
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTmZS78ND27z4Df9n4xDeq1K2nv7y7o1rjsX0X_XVszdUj_wY14t-l3Z5_11BAnYdkpAmY&usqp=CAU",
    bags: "DESTINY",
    name: "Destiny 2 Players Are Shocked with the New Character Players Are Shocked with the New Character",
    activeDate: "arzan khan 2 months ago",
  },
  {
    imageUrl:
      "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbZPqBF_l7EEJggsDyY-kt8LSwYxJ97KNBeA&usqp=CAU",
    bags: "CYBERPUNK",
    name: "Keanu Reeves Cameo in the Newest Cyberpunk Update Cameo in the Newest Cyberpunk Update",
    activeDate: "arzan khan 2 months ago",
  },
];

const trendingTopData = [
  {
    name: "Palworld Guide: How to Fain Your Base",
    activeDate: "arzan khan 2 months ago",
  },
  {
    name: "Genshin Impact 4.4: All Things You Need to Know",
    activeDate: "arzan khan 2 months ago",
  },
  {
    name: "Destiny 2 Players Are Shocked with the New Character",
    activeDate: "arzan khan 2 months ago",
  },
  {
    name: "Keanu Reeves Cameo in the Newest Cyberpunk Update",
    activeDate: "arzan khan 2 months ago",
  },
];
export default function Home({newdata}) {
  if(newdata){
    console.log("Latest Data :" , newdata)
  }

  
  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Karla&display=swap"
          rel="stylesheet"
        />
      </Head>
      <main className="">
        {/* <Header></Header> */}
        <div className={styles.heroCardWrap}>
          <div className={styles.heroCardBody}>
            <div className={styles.heroCardBox}>
              {heroData.map((card, index) => (
                <div key={index} className={styles.heroCardBoxItem}>
                  <img
                    src={card.imageUrl}
                    alt="hero images"
                    className={styles.heroCardBoxItemImg}
                  />
                  <div className={styles.heroCardBoxItemInfo}>
                    <h6 className={styles.heroCardBoxItemBags}>{card.bags}</h6>
                    <h4 className={styles.heroCardBoxItemName}>{card.name}</h4>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
        <div className={styles.promoWrap}>
          <Container>
            <div className={styles.promoBody}>
              <div className={styles.promoBox}>
                {promoData.map((card, index) => (
                  <div className={styles.promoBoxItem} key={index}>
                    <img className={styles.promoImg} src={card.imageUrl} />
                    <div className={styles.promoInfo}>
                      <h4 className={styles.promoName}>{card.name}</h4>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </Container>
        </div>
        <div className={styles.latestWrap}>
          <Container>
            <div className={styles.latestBody}>
              <div className={styles.latestContent}>
                <div className={styles.titleName}>Latest</div>
                <div className={styles.latestBox}>
                {/* {newdata.posts.nodes.map((card, index) => (
                  <>
                  <div className={styles.latestBoxItem}>
                  <h6>{card.title}</h6>
                    <div key={index} dangerouslySetInnerHTML={{__html: card.content}}>
                    </div>
                  </div>
                   
                  </>
                  
                  ))} */}
                  {newdata.posts.nodes.map((card, index) => (
                    <div className={styles.latestBoxItem} key={index}>
                      <img className={styles.latestImg} src={card.featuredImage.node.sourceUrl} />
                      <div className={styles.latestInfo}> 
                        <h6>{card.title}</h6>
                        <a href="#">{card.name}</a>
                        <h5>{card.activeDate}</h5>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              <div className={styles.trendingTopWrap}>
                <div>
                  <img src="https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcR4El1B5cOf9EjkuWgq4J_2RBIjo4jmzznJ8_3aMgezV3h3DJpE" />
                </div>
                <div className={styles.trendingTopHead}>
                  <div className={styles.trendingTopTitle}>trending topics</div>
                  <div className={styles.trendingTopBody}>
                    <ul>
                      {trendingTopData.map((card, index) => (
                        <li key={index}>
                          <h4>{card.name}</h4>
                          <p>{card.activeDate}</p>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </Container>
        </div>
        <Footer></Footer>
      </main>
    </>
  );
}

export async function getServerSideProps({ context }) {
  const ApiUrl = process.env.NEXT_PUBLIC_API_URL;
  console.log(ApiUrl);

  const queryObj = {
    query: `
      query {
        posts(where: {orderby: {field: DATE, order: DESC}}) {
          nodes {
            postId
            title
            content
            date
            featuredImage {
              node {
                altText
                slug
                title
                sourceUrl
                srcSet
              }
            }
          }
        }
      }
    `,
  };

  try {
    const response = await axios.post(ApiUrl, queryObj, {
      headers: {
        'Content-Type': 'application/json',
      },
    });

    const newdata = response.data.data;

    if (newdata) {
      return { props: { newdata } };
    }
  } catch (error) {
    console.error("Error While Fetching the Data :", error);
  }
}

